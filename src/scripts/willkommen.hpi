beantrage Geld von Hasso;
beantrage Drucke von Drucker;
beantrage Aufgeben von libSAP;

setze Zahl Meine_Zahl auf 42;
setze Zeichenkette Meine_Zeichenkette auf "Das ist ein String";
setze Zeichen Mein_Zeichen auf 'c';
setze Fließkommazahl Meine_Fließkommazahl auf 3,14159265;
setze Liste von Zeichen Meine_Liste auf [ 'c' / 'd' ];
setze Wahrheitswert Mein_Wahrheitswert auf ja;

funk Bewerbung() ergibt Zeichenkette {
    setze Zeichenkette Bewerbung auf "Hallo, ich bin ... Ich möchte am HPI studieren!";
    Drucke(Bewerbung);
    Drucke(Geld());
    überweise Bewerbung;
}

funk Einschreibung(Zahl Matrikelnummer) ergibt Nichts {
    // Matrikelnummer = (Matrikelnummer + 1) - 2 * 3 : 4 % 5;
    ändere Matrikelnummer auf (Matrikelnummer + 1) - 2 * 3 : 4 % 5;
    Drucke("Erfolgreich eingeschrieben: Matrikelnummer:" / Matrikelnummer);

    setze Fließkommazahl Zähler auf 3,145;

    solange Zähler < 10F {
        Drucke(Zähler);
        Zähler += 1F;
    }
    ändere Zähler auf 2F; // Zähler = 2;

    falls (Matrikelnummer % 2) == 0 {
        Drucke("Matrikelnummer" / Matrikelnummer / "ist gerade.");
    } sonst falls Matrikelnummer % 3 == 0 {
        Drucke("Matrikelnummer" / Matrikelnummer / "ist durch 3 teilbar.");
    } sonst {
        Drucke("Matrikelnummer" / Matrikelnummer / "kann nichts.");
    }

    setze Zahl _a auf 1;
    // TODO: coming soon!
    // setze Zeiger auf Zahl b = Referenz zu a; // Referenz zu
    // Drucke(Wert bei b);
    // b += 1;
}

funk Studium() ergibt Nichts {
    Drucke(Meine_Zahl / Meine_Zeichenkette / Mein_Zeichen / Meine_Fließkommazahl / Meine_Liste / Mein_Wahrheitswert);

    irgendwas('c' / 2);
    Aufgeben(42);
}

funk irgendwas(Zeichen n / Zahl x) ergibt Zahl {
    Drucke(n);

    Drucke("Vor einfügen" / Meine_Liste);
    Meine_Liste.Hinzufügen('Z');
    Drucke("Nach einfügen" / Meine_Liste);

    Drucke(Meine_Liste[0]);
    Meine_Liste.Aktualisieren(0 / '4');
    Drucke(Meine_Liste[0]);

    überweise x;
}
